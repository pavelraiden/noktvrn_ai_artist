version: '3.8'

services:
  db:
    image: postgres:15
    container_name: ai_artist_db_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ai_artist_db}
      POSTGRES_USER: ${POSTGRES_USER:-ai_artist_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_artist_api_dev
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ai_artist_user}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-ai_artist_db}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      # Add other necessary environment variables
    volumes:
      - .:/app # Mount current directory for development changes
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - backend
      - frontend

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus_dev
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - backend

  grafana:
    image: grafana/grafana:9.5.3
    container_name: grafana_dev
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - frontend
      - backend

  # Placeholder for a worker service (e.g., for data pipelines, evolution tasks)
  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile # Can reuse the same Dockerfile
  #   container_name: ai_artist_worker_dev
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   environment:
  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-ai_artist_user}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-ai_artist_db}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
  #     - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
  #     # Add other necessary environment variables
  #   volumes:
  #     - .:/app # Mount current directory for development changes
  #   command: python -m worker.main # Example command to start worker
  #   networks:
  #     - backend

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  frontend:
  backend:

