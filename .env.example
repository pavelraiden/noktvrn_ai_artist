# Production Environment Variables Template for AI Artist Platform (noktvrn_ai_artist)
# Copy this file to .env and fill in your actual credentials.
# DO NOT COMMIT THE .env FILE TO GIT

# --- API Keys ---
SUNO_API_KEY="REAL_DEMO_SUNO_KEY_HERE"
PEXELS_API_KEY="REAL_DEMO_PEXELS_KEY_HERE"
PIXABAY_API_KEY="REAL_DEMO_PIXABAY_KEY_HERE"

# --- LLM API Keys ---
# Add keys for the LLMs you intend to use
DEEPSEEK_API_KEY="REAL_DEMO_DEEPSEEK_KEY_HERE"
GEMINI_API_KEY="REAL_DEMO_GEMINI_KEY_HERE"
GROK_API_KEY="REAL_DEMO_GROK_KEY_HERE"
MISTRAL_API_KEY="REAL_DEMO_MISTRAL_KEY_HERE"
# OPENAI_API_KEY="REAL_DEMO_OPENAI_KEY_HERE" # Optional: Uncomment and add if using OpenAI
# ANTHROPIC_API_KEY="REAL_DEMO_ANTHROPIC_KEY_HERE" # Optional: Uncomment and add if using Anthropic/Claude models

# --- Telegram Integration ---
# Required for sending previews via Batch Runner and receiving feedback
TELEGRAM_BOT_TOKEN="REAL_DEMO_TELEGRAM_BOT_TOKEN_HERE"
TELEGRAM_CHAT_ID="REAL_DEMO_TELEGRAM_CHAT_ID_HERE" # The chat ID where the bot sends messages

# --- General Config ---
LOG_LEVEL="INFO" # Optional: DEBUG, INFO, WARNING, ERROR, CRITICAL
OUTPUT_BASE_DIR="/home/ubuntu/ai_artist_system_clone/output" # Example: /path/to/your/output/directory

# --- Batch Runner Config ---
BATCH_POLLING_INTERVAL_SECONDS=60
BATCH_MAX_WAIT_TIME_SECONDS=3600 # 1 hour

# --- Release Chain Config ---
RELEASE_LOG_FILE="/home/ubuntu/ai_artist_system_clone/output/release_log.md"
RELEASE_QUEUE_FILE="/home/ubuntu/ai_artist_system_clone/output/release_queue.json"

# --- Database (If applicable) ---
# DATABASE_URL="postgresql://user:password@host:port/database"

# --- Distribution Credentials (Platform Specific - Add as needed) ---
# DISTROKID_USERNAME="REAL_DEMO_DISTROKID_USERNAME"
# DISTROKID_PASSWORD="REAL_DEMO_DISTROKID_PASSWORD"
# SPOTIFY_CLIENT_ID="REAL_DEMO_SPOTIFY_CLIENT_ID"
# SPOTIFY_CLIENT_SECRET="REAL_DEMO_SPOTIFY_CLIENT_SECRET"



# --- Batch Runner Config (Continued) ---
MAX_APPROVAL_WAIT_TIME=300 # Max seconds to wait for Telegram approval
POLL_INTERVAL=10 # Seconds between checking Telegram approval status
REFLECTION_LLM_PRIMARY="deepseek:deepseek-chat" # Primary LLM for generating reflections
REFLECTION_LLM_FALLBACKS="gemini:gemini-pro" # Comma-separated fallback LLMs for reflections
REFLECTION_MAX_TOKENS=500
REFLECTION_TEMPERATURE=0.6
ARTIST_RETIREMENT_THRESHOLD=5 # Consecutive rejections before retiring an artist
ARTIST_CREATION_PROBABILITY=0.1 # Probability (0.0 to 1.0) of creating a new artist each cycle
AB_TESTING_ENABLED="False" # Enable A/B testing framework in batch runner

# --- Error Analysis Service Config ---
ERROR_ANALYSIS_LLM_PRIMARY="deepseek:deepseek-chat" # Primary LLM for analyzing errors
ERROR_ANALYSIS_LLM_FALLBACKS="gemini:gemini-pro" # Comma-separated fallback LLMs for error analysis
ERROR_ANALYSIS_MAX_TOKENS=1000
ERROR_ANALYSIS_TEMPERATURE=0.5
ENGINEER_LLM_PRIMARY="deepseek:deepseek-coder" # Primary LLM for generating fixes (code-focused model recommended)
ENGINEER_LLM_FALLBACKS="gemini:gemini-pro" # Comma-separated fallback LLMs for fix generation
ENGINEER_MAX_TOKENS=1500
ENGINEER_TEMPERATURE=0.3
AUTO_FIX_ENABLED="False" # Enable attempting to auto-apply suggested patches via 'git apply'
MONITOR_INTERVAL_SECONDS=60 # How often the error analysis service checks the log file
ERROR_CONTEXT_LINES=20 # Number of lines before an error to include in analysis context



# --- Artist Lifecycle Manager Config ---
LIFECYCLE_EVALUATION_PERIOD_DAYS=30
LIFECYCLE_MIN_RUNS_FOR_EVALUATION=10
LIFECYCLE_POOR_PERFORMANCE_THRESHOLD=0.2 # Approval rate below which evolution/review is triggered
LIFECYCLE_INACTIVITY_THRESHOLD_DAYS=60 # Days without a run before an artist is marked inactive
LIFECYCLE_RETIREMENT_CONSECUTIVE_REJECTIONS=5 # Consecutive rejections before retirement (matches BATCH_RUNNER for now)

